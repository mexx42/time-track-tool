#!/usr/bin/env python
import time
import os
import sys
import stat

lockfile_path = '/var/run/roundup'

normpath = os.path.normpath
options  = []
l        = len (sys.argv)
if l < 3 :
    print >> sys.stderr \
          , "Usage: %s <tracker> <user:password@server> [lockfile] [options]" \
          % sys.argv [0]
    sys.exit (23)
if l > 4 :
    options = sys.argv [4:]

lockfile = normpath (os.path.join (lockfile_path, 'mailgw.lock'))
if l > 3 :
    lockfile = sys.argv [3]
else :
    try :
        os.mkdir (lockfile_path)
    except IOError :
        pass
tracker  = sys.argv [1]
server   = sys.argv [2]
mailgw   = "roundup-mailgw %s '%s' imap '%s'" % \
    (' '.join (options), tracker, server)

# Note: There is still a race condition if you call this script almost
# at the same time. Under normal circumstances (called via cron once a
# minute) locking should work with this simple approach.

try :
    mtime = os.stat (lockfile)[stat.ST_MTIME]
except OSError, cause :
    if cause.errno != 2 : raise
    # no lockfile
    open (lockfile, "w").close ()
    os.system (mailgw)
    os.unlink (lockfile)
    sys.exit (0)


if mtime < time.time () - 3600 * 24 :
    print "Roundup-mailgw: Locked for more than 24 hours!!"
    sys.exit (1)
