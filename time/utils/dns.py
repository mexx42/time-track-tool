#!/usr/bin/python

import time
import sys
import os
import os.path
import textwrap

from Roundup_Access import Roundup_Access
from roundup.date   import Date

temp_dir = "/var/tmp/dns-dhcp-temp"
verbose = 0

def generate_dns_header(olo) :
    crtime = int(time.mktime (time.localtime ()))
    dns_header = """
;####################################################################################################
;#                                Zone file for %s
;#                        ====================================================================
;#                                DO NOT EDIT THIS FILE - IT WAS AUTOMATICALLY GENERATED
;####################################################################################################
; The full zone file
;
$TTL   86400

%s.        IN        SOA ns1.%s.        hostmaster.tttech.com.        (
              %s                     ; serial
              36000                  ; refresh
              3600                   ; retry
              3600000                ; expire
              360000)                ; minimum TTL
                                                                                
;          TXT "%s";
              IN        NS        ns1
              IN        NS        ns2
              IN        MX        10        mail.%s. ; primary mail exchanger

;####################################################################################################
;#          CORE-NETWORK, PRINTER and SERVERS @ %s
;####################################################################################################

                                                                                                                 
""" % ( olo.domain, olo.domain, olo.domain, crtime, olo.name, olo.domain, olo.domain )
    return dns_header

def generate_rev_header(sn, domain) :
    crtime = int(time.mktime (time.localtime ()))

    s = repr(sn.ip)
    l = s.split('.')
    arpa = l[1] + '.' + l[0];
    
    rev_header = """
;####################################################################################################
;#                                Reverse-Zone file for %s
;#                        ====================================================================
;#                                DO NOT EDIT THIS FILE - IT WAS AUTOMATICALLY GENERATED
;####################################################################################################
; the reverse zone file
$ORIGIN %s.in-addr.arpa.
$TTL    86400
@               IN      SOA     ns1.%s. hostmaster.tttech.com. (
                        %s
                        36000
                        3600
                        3600000
                        360000 )
                                                                                                                        
@               IN      NS      ns1.%s.
@               IN      NS      ns2.%s.
0.0             IN      PTR     office-net.%s.
255.255         IN      PTR     office-broadcast.%s.
""" % ( domain, arpa, domain, crtime, domain, domain,  domain, domain )
    return rev_header
    
def make_dirs(domain) :
    dirs = domain.split('.')
    dirs.reverse()
    cur_dir = temp_dir
    #os.mkdir (temp_dir)
    for d in dirs :
        cur_dir += '/' + d
        os.mkdir(cur_dir)

def domain_dir(domain) :
    dirs = domain.split('.')
    dirs.reverse()
    s = temp_dir
    for d in dirs : 
        s += '/' + d
    return s

if __name__ == '__main__' :
    if len (sys.argv) != 3 :
        print "Usage: %s <tracker> <org_location>"
        sys.exit (23)
                    
    ra  = Roundup_Access (sys.argv [1], 'dc=tttech,dc=com')
    olo = ra.Org_Location (sys.argv [2])

    #if (verbose) :
    #    print "Creating directories..."      
    make_dirs(olo.domain)

    filename = domain_dir(olo.domain) + '/' +  olo.domain + '.hosts'
    if (verbose) :
        print "Creating " + filename + "..."
    outfile = open(filename, 'w')
    outfile.write(generate_dns_header(olo))
    outfile.write(olo.as_dns())
    outfile.close()

    sns = ra.Ip_Subnet.find(org_location = olo.id)
    for sn in sns :
        s = repr(sn.ip)
        l = s.split('.')
        arpa = l[1] + '.' + l[0];
        filename = domain_dir(olo.domain) + '/' + l[1] + '.' + l[0] + '.in-addr.arpa'
        if (verbose) :
            print "Creating " + filename + '...'
        outfile = open(filename, "w")
        outfile.write(generate_rev_header(sn, olo.domain))
        outfile.write(sn.as_dns())
        outfile.close()
    
