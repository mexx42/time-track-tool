#! /usr/bin/python
# -*- coding: iso-8859-1 -*-
# Copyright (C) 2004 Dr. Ralf Schlatterbeck Open Source Consulting.
# Reichergasse 131, A-3411 Weidling.
# Web: http://www.runtux.com Email: office@runtux.com
# All rights reserved
# ****************************************************************************
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
# ****************************************************************************
# $Id$

from roundup.cgi.TranslationService import get_translation

_ = None

helptext = \
    { ""'activity'            :
      ""'''Date of last change'''
    , ""'actor'               :
      ""'''Person doing the last change'''
    , ""'user.address'        :
      ""'''Email address for this user'''
    , ""'alternate_addresses' :
      ""'''Alternate email addresses for this user, one per line'''
    , ""'author'              :
      ""'''Author of this message'''
    , ""'confirm'                :
      ""'''Confirm the password here: first password and this entry
           must match.
        '''
    , ""'content'                :
      ""'''Content of this %(Classname)s'''
    , ""'creation'            :
      ""'''Date of creation of this record'''
    , ""'creator'             :
      ""'''Person who created this record'''
    , ""'description'         :
      ""'''Verbose description of this %(Classname)s'''
    , ""'email'               :
      ""'''Email address for this %(Classname)s'''
    , ""'files'               :
      ""'''Files for this %(Classname)s'''
    , ""'id'                  :
      ""'''ID of this record, automatically generated by the system.
           Cannot be changed by the user.
        '''
    , ""'initial'             :
      ""'''Initials of this %(Classname)s'''
    , ""'inreplyto'           :
      ""'''In Reply To field if this %(Classname)s was received by email'''
    , ""'klass'               :
      ""'''Class for this query'''
    , ""'messageid'           :
      ""'''Message-ID if this message was received via email'''
    , ""'messages'            :
      ""'''List of messages for this %(Classname)s'''
    , ""'msg'            :
      ""'''Field for messages for %(Classname)s'''
    , ""'name'                :
      ""'''Unique name for this %(Classname)s'''
    , ""'nickname'            :
      ""'''Nickname (or short name) for this %(Classname)s'''
    , ""'order'               :
      ""'''Items are ordered by this property in drop-down boxes etc.'''
    , ""'password'            :
      ""'''Password for this %(Classname)s'''
    , ""'private_for'         :
      ""'''Flag if this is a private %(Classname)s'''
    , ""'queries'             :
      ""'''Queries for this %(Classname)s'''
    , ""'realname'            :
      ""'''Real name for this %(Classname)s'''
    , ""'recipients'          :
      ""'''Only set if message was received via email.'''
    , ""'roles'               :
      ""'''Roles for this %(Classname)s'''
    , ""'subject'             :
      ""'''Short identification of this message'''
    , ""'summary'             :
      ""'''Short summary of this message (usually first line)'''
    , ""'timezone'            :
      ""'''Time zone of this %(Classname)s'''
    , ""'type'                :
      ""'''Mime type of this file'''
    , ""'url'                 :
      ""'''Web-Link for this %(Classname)s'''
    , ""'username'            :
      ""'''Login-name'''
    }

def combined_name (cls, attr) :
    pname = '%s.%s' % (cls, attr)
    if pname in helptext :
        return pname
    return attr
# end def combined_name

def help_properties (klass) :
    """Return all class properties plus some more for which help texts
       should be displayed (e.g., "message" which describes the message
       window). The parameter klass is a html klass.
    """
    p = []
    properties = klass._klass.getprops ()
    if 'messages' in properties :
        p.append ('msg')
    if klass.classname == 'user' :
        p.append ('confirm')
    for i in properties.iterkeys () :
        pname = combined_name (klass.classname, i)
        if pname in helptext :
            p.append (pname)
    p = [(_ (i).decode ('utf-8'), i) for i in p]
    p.sort ()
    return [i [1] for i in p]
# end def help_properties

def fieldname (cls, name, fieldname = None) :
    if not fieldname : fieldname = name
    prop = combined_name (cls, fieldname)
    if not prop in helptext :
        return "%s&nbsp;" % _ (name)
    return "<a href=\"javascript:help_window" \
           "('%s?:template=property_help#%s', '500', '400')\">" \
           "%s&nbsp; </a>" \
           % (cls, prop, _ (name))

# end def fieldname


def init (instance) :
    global _
    _   = get_translation \
        (instance.config.TRACKER_LANGUAGE, instance.tracker_home).gettext
    instance.registerUtil ('helptext',        helptext)
    instance.registerUtil ('help_properties', help_properties)
    instance.registerUtil ('fieldname',       fieldname)
# end def init
